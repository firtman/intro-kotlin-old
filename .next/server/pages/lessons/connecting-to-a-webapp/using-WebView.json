{"pageProps":{"post":{"attributes":{},"html":"<p>We need to render an <code>AndroidView</code> to connect classic Android UI controls with a composable, such as Webview. </p>\n<h2 id=\"webview-composable\">WebView composable</h2>\n<pre><code class=\"hljs language-kotlin\"><span class=\"hljs-meta\">@Composable</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">WebView</span><span class=\"hljs-params\">()</span></span> {\n    <span class=\"hljs-comment\">// Declare a string that contains a url</span>\n    <span class=\"hljs-keyword\">val</span> url = <span class=\"hljs-string\">&quot;https://firtman.github.io/coffeemasters/webapp&quot;</span>\n\n    <span class=\"hljs-comment\">// Adding a WebView inside AndroidView</span>\n    <span class=\"hljs-comment\">// with layout as full screen</span>\n    AndroidView(factory = {\n        WebView(it).apply {\n            layoutParams = ViewGroup.LayoutParams(\n                ViewGroup.LayoutParams.MATCH_PARENT,\n                ViewGroup.LayoutParams.MATCH_PARENT\n            )\n            webViewClient = WebViewClient()\n            loadUrl(url)\n        }\n    }, update = {\n        it.loadUrl(url)\n    })\n}\n</code></pre>\n<h2 id=\"infopage\">InfoPage</h2>\n<p>Now we just use it in <code>InfoPage</code></p>\n<pre><code class=\"hljs language-kotlin\"><span class=\"hljs-meta\">@Composable</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">InfoPage</span><span class=\"hljs-params\">()</span></span> {\n    WebView()\n}\n</code></pre>\n","slug":"using-WebView","title":"Using WebView","section":"Connecting to a Webapp","icon":"code","filePath":"/Users/firt/Library/Mobile Documents/com~apple~CloudDocs/Trainings/FEM/CompanionSite/intro-android/lessons/07-connecting-to-a-webapp/A-using-WebView.md","nextSlug":"/intro-android/lessons/final-steps/app-icons","prevSlug":"/intro-android/lessons/using-APIs-and-JSON/finishing-the-menu"}},"__N_SSG":true}