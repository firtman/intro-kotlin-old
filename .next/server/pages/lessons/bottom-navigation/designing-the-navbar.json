{"pageProps":{"post":{"attributes":{},"html":"<h2 id=\"navbaritem\">NavBarItem</h2>\n<p>Every tab-like item in the bottom bar navigation will need a composable receiving a page object, a selected boolean state and a modifier to pass to the root composable.</p>\n<pre><code class=\"hljs language-kotlin\"><span class=\"hljs-meta\">@Composable</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">NavBarItem</span><span class=\"hljs-params\">(page: <span class=\"hljs-type\">NavPage</span>, selected: <span class=\"hljs-type\">Boolean</span> = <span class=\"hljs-literal\">false</span>, modifier: <span class=\"hljs-type\">Modifier</span> = Modifier)</span></span> {\n    Column(horizontalAlignment = Alignment.CenterHorizontally,\n         modifier = modifier.padding(horizontal = <span class=\"hljs-number\">12.</span>dp)) {\n        Image(\n            imageVector = page.icon,\n            contentDescription = page.name,\n            colorFilter = ColorFilter.tint(\n                <span class=\"hljs-keyword\">if</span> (selected) Alternative1 <span class=\"hljs-keyword\">else</span> OnPrimary\n            ),\n            modifier = Modifier\n                .padding(bottom = <span class=\"hljs-number\">8.</span>dp)\n                .size(<span class=\"hljs-number\">24.</span>dp)\n        )\n        Text(page.name,\n            fontSize = <span class=\"hljs-number\">12.</span>sp,\n            color = <span class=\"hljs-keyword\">if</span> (selected) Alternative1 <span class=\"hljs-keyword\">else</span> OnPrimary\n        )\n    }\n}\n</code></pre>\n<h2 id=\"navbar\">NavBar</h2>\n<p>Finally, our bottom navigation bar is ready to be created. It loops through all the routes available and render each NavBarItem listening for a click event, and calling the onChange lambda expression received.</p>\n<pre><code class=\"hljs language-kotlin\"><span class=\"hljs-meta\">@Preview(showBackground = true, widthDp = 400)</span>\n<span class=\"hljs-meta\">@Composable</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">fun</span> <span class=\"hljs-title\">NavBar</span><span class=\"hljs-params\">(selectedRoute: <span class=\"hljs-type\">String</span> = Routes.MenuPage.route, onChange: (<span class=\"hljs-type\">String</span>)-&gt;<span class=\"hljs-type\">Unit</span> = {})</span></span> {\n    Row(horizontalArrangement = Arrangement.SpaceEvenly,\n        modifier = Modifier\n        .background(Primary)\n        .padding(<span class=\"hljs-number\">12.</span>dp)\n        .fillMaxWidth()\n    ) {\n        <span class=\"hljs-keyword\">for</span> (page <span class=\"hljs-keyword\">in</span> Routes.pages) {\n            NavBarItem(page,\n                selected = selectedRoute == page.route,\n                modifier = Modifier\n                    .clickable {\n                        onChange(page.route)\n                    }\n            )\n        }\n    }\n}\n</code></pre>\n","slug":"designing-the-navbar","title":"Designing the Navbar","section":"Bottom Navigation","icon":"bars","filePath":"/Users/firt/Library/Mobile Documents/com~apple~CloudDocs/Trainings/FEM/CompanionSite/intro-android/lessons/04-bottom-navigation/B-designing-the-navbar.md","nextSlug":"/intro-android/lessons/bottom-navigation/making-navbar-interactive","prevSlug":"/intro-android/lessons/bottom-navigation/using-bottom-navigations"}},"__N_SSG":true}